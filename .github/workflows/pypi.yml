name: Publish to PyPI

on:
  push:
    tags: ['v*']
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Build frontend with avatar enhancements
        working-directory: frontend
        run: |
          npm ci
          npm run build
          echo "Frontend build completed with 3D avatar support"
      
      - name: Build Python package with new features
        run: |
          uv pip install --system build twine
          # Clean any existing build artifacts
          rm -rf build/ dist/ *.egg-info backend/*.egg-info
          # Copy frontend build to backend package
          mkdir -p backend/tektra/frontend
          cp -r frontend/out/* backend/tektra/frontend/
          # Verify avatar components are included
          ls -la backend/tektra/frontend/ || echo "Frontend build directory structure:"
          find backend/tektra/frontend -name "*.js" | head -5 || echo "Frontend files:"
          # Build the package
          python -m build
          twine check dist/*
          echo "Package built with Phase 2 avatar enhancements"
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true