# Tektra AI Assistant - Prometheus Configuration

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'tektra-production'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "/etc/prometheus/rules/*.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # Tektra main application metrics
  - job_name: 'tektra-app'
    static_configs:
      - targets: ['tektra:8090']
    metrics_path: /metrics
    scrape_interval: 10s
    scrape_timeout: 5s
    
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    
  # PostgreSQL metrics (if pg_exporter is available)
  - job_name: 'postgres'
    static_configs:
      - targets: []
        # - postgres-exporter:9187
    scrape_interval: 30s
    
  # Redis metrics (if redis_exporter is available)
  - job_name: 'redis'
    static_configs:
      - targets: []
        # - redis-exporter:9121
    scrape_interval: 30s
    
  # Node/system metrics (if node_exporter is available)
  - job_name: 'node'
    static_configs:
      - targets: []
        # - node-exporter:9100
    scrape_interval: 30s
    
  # Nginx metrics (if nginx-prometheus-exporter is available)
  - job_name: 'nginx'
    static_configs:
      - targets: []
        # - nginx-exporter:9113
    scrape_interval: 30s

# Remote write configuration (for external monitoring services)
remote_write: []
  # - url: "https://prometheus-remote-write-endpoint"
  #   headers:
  #     Authorization: "Bearer your-token"

# Remote read configuration
remote_read: []
  # - url: "https://prometheus-remote-read-endpoint"
  #   headers:
  #     Authorization: "Bearer your-token"